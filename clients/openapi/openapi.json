{
  "openapi": "3.0.0",
  "info": {
    "version": "0.9.1",
    "title": "RivetKit API"
  },
  "components": {
    "schemas": {
      "ResolveResponse": {
        "type": "object",
        "properties": {
          "i": {
            "type": "string",
            "example": "actor-123"
          }
        },
        "required": ["i"]
      },
      "ResolveQuery": {
        "type": "object",
        "properties": {
          "query": {
            "nullable": true,
            "example": {
              "getForId": {
                "actorId": "actor-123"
              }
            }
          }
        }
      },
      "ActionResponse": {
        "nullable": true
      },
      "ActionRequest": {
        "type": "object",
        "properties": {
          "query": {
            "nullable": true,
            "example": {
              "getForId": {
                "actorId": "actor-123"
              }
            }
          },
          "body": {
            "nullable": true,
            "example": {
              "param1": "value1",
              "param2": 123
            }
          }
        }
      },
      "ConnectionMessageResponse": {
        "nullable": true
      },
      "ConnectionMessageRequest": {
        "type": "object",
        "properties": {
          "message": {
            "nullable": true,
            "example": {
              "type": "message",
              "content": "Hello, actor!"
            }
          }
        }
      }
    },
    "parameters": {}
  },
  "paths": {
    "/actors/resolve": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": true,
            "name": "X-RivetKit-Query",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResolveResponse"
                }
              }
            }
          },
          "400": {
            "description": "User error"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/actors/connect/websocket": {
      "get": {
        "responses": {
          "101": {
            "description": "WebSocket upgrade"
          }
        }
      }
    },
    "/actors/connect/sse": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The encoding format to use for the response (json, cbor)",
              "example": "json"
            },
            "required": true,
            "name": "X-RivetKit-Encoding",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": true,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "SSE stream",
            "content": {
              "text/event-stream": {
                "schema": {
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/actors/actions/{action}": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "myAction"
            },
            "required": true,
            "name": "action",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The encoding format to use for the response (json, cbor)",
              "example": "json"
            },
            "required": true,
            "name": "X-RivetKit-Encoding",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "400": {
            "description": "User error"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/actors/message": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor ID (used in some endpoints)",
              "example": "actor-123456"
            },
            "required": true,
            "name": "X-RivetKit-Actor",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection ID",
              "example": "conn-123456"
            },
            "required": true,
            "name": "X-RivetKit-Conn",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "The encoding format to use for the response (json, cbor)",
              "example": "json"
            },
            "required": true,
            "name": "X-RivetKit-Encoding",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection token"
            },
            "required": true,
            "name": "X-RivetKit-Conn-Token",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "User error"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/actors/:name/http/*": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": false,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "nullable": true,
                "description": "Raw request body (can be any content type)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - response from actor's onFetch handler",
            "content": {
              "*/*": {
                "schema": {
                  "nullable": true,
                  "description": "Raw response from actor's onFetch handler"
                }
              }
            }
          },
          "404": {
            "description": "Actor does not have an onFetch handler"
          },
          "500": {
            "description": "Internal server error or invalid response from actor"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": false,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "nullable": true,
                "description": "Raw request body (can be any content type)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - response from actor's onFetch handler",
            "content": {
              "*/*": {
                "schema": {
                  "nullable": true,
                  "description": "Raw response from actor's onFetch handler"
                }
              }
            }
          },
          "404": {
            "description": "Actor does not have an onFetch handler"
          },
          "500": {
            "description": "Internal server error or invalid response from actor"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": false,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "nullable": true,
                "description": "Raw request body (can be any content type)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - response from actor's onFetch handler",
            "content": {
              "*/*": {
                "schema": {
                  "nullable": true,
                  "description": "Raw response from actor's onFetch handler"
                }
              }
            }
          },
          "404": {
            "description": "Actor does not have an onFetch handler"
          },
          "500": {
            "description": "Internal server error or invalid response from actor"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": false,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "nullable": true,
                "description": "Raw request body (can be any content type)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - response from actor's onFetch handler",
            "content": {
              "*/*": {
                "schema": {
                  "nullable": true,
                  "description": "Raw response from actor's onFetch handler"
                }
              }
            }
          },
          "404": {
            "description": "Actor does not have an onFetch handler"
          },
          "500": {
            "description": "Internal server error or invalid response from actor"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": false,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "nullable": true,
                "description": "Raw request body (can be any content type)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - response from actor's onFetch handler",
            "content": {
              "*/*": {
                "schema": {
                  "nullable": true,
                  "description": "Raw response from actor's onFetch handler"
                }
              }
            }
          },
          "404": {
            "description": "Actor does not have an onFetch handler"
          },
          "500": {
            "description": "Internal server error or invalid response from actor"
          }
        }
      },
      "head": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": false,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "nullable": true,
                "description": "Raw request body (can be any content type)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - response from actor's onFetch handler",
            "content": {
              "*/*": {
                "schema": {
                  "nullable": true,
                  "description": "Raw response from actor's onFetch handler"
                }
              }
            }
          },
          "404": {
            "description": "Actor does not have an onFetch handler"
          },
          "500": {
            "description": "Internal server error or invalid response from actor"
          }
        }
      },
      "options": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Actor query information"
            },
            "required": false,
            "name": "X-RivetKit-Query",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Connection parameters"
            },
            "required": false,
            "name": "X-RivetKit-Conn-Params",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "nullable": true,
                "description": "Raw request body (can be any content type)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - response from actor's onFetch handler",
            "content": {
              "*/*": {
                "schema": {
                  "nullable": true,
                  "description": "Raw response from actor's onFetch handler"
                }
              }
            }
          },
          "404": {
            "description": "Actor does not have an onFetch handler"
          },
          "500": {
            "description": "Internal server error or invalid response from actor"
          }
        }
      }
    },
    "/actors/:name/websocket/*": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Actor name",
              "example": "my-actor"
            },
            "required": true,
            "name": "name",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "WebSocket protocols containing query and connection parameters encoded as query.{encoded} and conn_params.{encoded}",
              "example": "query.%7B%22getOrCreateForKey%22%3A%7B%22name%22%3A%22my-actor%22%2C%22key%22%3A%5B%22default%22%5D%7D%7D"
            },
            "required": false,
            "name": "sec-websocket-protocol",
            "in": "header"
          }
        ],
        "responses": {
          "101": {
            "description": "WebSocket upgrade successful"
          },
          "400": {
            "description": "WebSockets not enabled or invalid request"
          },
          "404": {
            "description": "Actor does not have an onWebSocket handler"
          }
        }
      }
    }
  }
}
