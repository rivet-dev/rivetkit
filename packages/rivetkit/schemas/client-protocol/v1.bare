# MARK: Message To Client
type Init struct {
	actorId: str
	connectionId: str
	connectionToken: str
}

type Error struct {
	code: str
	message: str
	metadata: optional<data>
	actionId: optional<uint>
}

type ActionResponse struct {
	id: uint
	output: data
}

type Event struct {
	name: str
	# CBOR array
	args: data
}

type ToClientBody union {
	Init |
	Error |
	ActionResponse |
	Event
}

type ToClient struct {
	body: ToClientBody
}

# MARK: Message To Server
type ActionRequest struct {
	id: uint
	name: str
	# CBOR array
	args: data
}

type SubscriptionRequest struct {
	eventName: str
	subscribe: bool
}

type ToServerBody union {
	ActionRequest |
	SubscriptionRequest
}

type ToServer struct {
	body: ToServerBody
}

# MARK: HTTP Action
type HttpActionRequest struct {
	# CBOR array
	args: data
}

type HttpActionResponse struct {
	output: data
}

# MARK: HTTP Error
type HttpResponseError struct {
	code: str
	message: str
	metadata: optional<data>
}

# MARK: HTTP Resolve
type HttpResolveRequest void

type HttpResolveResponse struct {
	actorId: str
}

