// import { describe, test, expect, beforeAll, afterAll } from "vitest";
// import os from "node:os";
// import fs from "node:fs/promises";
// import path from "node:path";
// import { fileURLToPath } from "node:url";
// import { deployToRivet } from "./rivet-deploy";
// import { randomUUID } from "node:crypto";
//
// const __dirname = path.dirname(fileURLToPath(import.meta.url));
//
// // Simple counter actor definition to deploy
// const COUNTER_ACTOR = `
// import { actor, setup } from "@rivetkit/core";
//
// const counter = actor({
//   state: { count: 0 },
//   actions: {
//     increment: (c, amount) => {
//       c.state.count += amount;
//       c.broadcast("newCount", c.state.count);
//       return c.state.count;
//     },
//     getCount: (c) => {
//       return c.state.count;
//     },
//   },
// });
//
// export const registry = setup({
//   use: { counter },
// });
//
// test("Rivet deployment tests", async () => {
// 	const tempFilePath = path.join(os.tmpdir(), `registry-${randomUUID()}`);
// 	await fs.writeFile(tempFilePath, COUNTER_ACTOR);
// 	await deployToRivet("test-registry", tempFilePath, true);
// });
